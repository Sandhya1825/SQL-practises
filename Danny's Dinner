CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

  ---1.What is the total amount each customer spent at the restaurant?

  select s.customer_id, sum(m.price) as Amount_Spent from sales s join menu m on 
  s.product_id=m.product_id group by s.customer_id

  --2.How many days has each customer visited the restaurant?

  select customer_id, count(order_date) from sales group by customer_id

  --3.What was the first item from the menu purchased by each customer?
  
  WITH ordered_sales_cte AS
(
 SELECT customer_id, order_date, product_name,
  DENSE_RANK() OVER (PARTITION BY s.customer_id
  ORDER BY s.order_date) AS rank
 FROM dbo.sales AS s
 JOIN dbo.menu AS m
  ON s.product_id = m.product_id
)
SELECT customer_id, product_name
FROM ordered_sales_cte
WHERE rank=1
GROUP BY customer_id, product_name;

select top 1 customer_id,order_date,product_name from ordered_sales_cte
where rank in (1,10) group by customer_id, product_name

--4. What is the most purchased item on the menu and 
--how many times was it purchased by all customers?

select top 1 m.product_name, count(m.product_id) as most_purchased from menu m join sales s
on s.product_id = m.product_id group by m.product_name order by count(m.product_id) desc

--5. Which item was the most popular for each customer?

select s.customer_id,m.product_name, count(m.product_id) as most_purchased from menu m join sales s
on s.product_id = m.product_id group by s.customer_id,m.product_name order by count(m.product_id) desc

WITH fav_item_cte AS
(
 SELECT s.customer_id, m.product_name, 
  COUNT(m.product_id) AS order_count,
  DENSE_RANK() OVER(PARTITION BY s.customer_id
  ORDER BY COUNT(s.customer_id) DESC) AS rank
FROM dbo.menu AS m
JOIN dbo.sales AS s
 ON m.product_id = s.product_id
GROUP BY s.customer_id, m.product_name
)
SELECT customer_id, product_name, order_count
FROM fav_item_cte 
WHERE rank = 1;

--6.Which item was purchased first by the customer after they became a member?

WITH member_sales_cte AS 
(
 SELECT s.customer_id, m.join_date, s.order_date,   s.product_id,
         DENSE_RANK() OVER(PARTITION BY s.customer_id
  ORDER BY s.order_date) AS rank
     FROM sales AS s
 JOIN members AS m
  ON s.customer_id = m.customer_id
 WHERE s.order_date >= m.join_date
)
SELECT s.customer_id, s.order_date, m2.product_name 
FROM member_sales_cte AS s
JOIN menu AS m2
 ON s.product_id = m2.product_id
WHERE rank = 1;

--7. What is the total items and amount spent for each member before they became a member

select s.customer_id, COUNT(distinct s.product_id) as total_items, SUM(me.price) as amount_spent
from sales s join menu me on s.product_id = me.product_id 
join members m on s.customer_id = m.customer_id
where s.order_date < m.join_date
group by s.customer_id

--8. If each $1 spent equates to 10 points and sushi has a 2x points multiplier 
--- how many points would each customer have?

with cte as
(
select me.product_id,me.product_name,me.price,s.customer_id,
case 
when me.product_id=1 then me.price * 20
else me.price*10
end as points
from menu me join sales s on me.product_id = s.product_id
)
select me.product_id,me.product_name,me.price,s.customer_id from cte group by s.customer_id
